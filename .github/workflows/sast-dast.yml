name: SAST and DAST Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sast:
    name: Static Application Security Testing (SAST) with SpotBugs
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4.0.0

      # 设置 Java 和 Maven 环境
      - name: Set up Java and Maven
        uses: actions/setup-java@v4.0.0
        with:
          java-version: 17
          distribution: temurin

      - name: Install dependencies and skip tests
        run: mvn clean install -DskipTests=true

      # 安装依赖并运行 SpotBugs
      - name: Run SpotBugs
        run: |
          mvn spotbugs:spotbugs -DskipTests=true
      # 保存 SpotBugs 报告到 GitHub Actions 工作流的结果
      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@v4.0.0
        with:
          name: spotbugs-report
          path: target/

  dast:
    name: Dynamic Application Security Testing (DAST) with OWASP ZAP
    runs-on: ubuntu-latest
    needs: sast

    steps:
      # 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create API endpoints file
        run: |
          echo "http://localhost:8080/api/users/login" > api-endpoints.txt
          echo "http://localhost:8080/api/movies" >> api-endpoints.txt
          echo "http://localhost:8080/api/users/register" >> api-endpoints.txt

      - name: Verify API endpoints file
        run: cat ${{ github.workspace }}/api-endpoints.txt

      # 登录 Docker
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 启动 Web 应用（确保服务能在 localhost:8080 运行）
      - name: Run Web Application
        run: |
          nohup mvn spring-boot:run &
          sleep 10 # 等待服务启动

      # 拉取 OWASP ZAP 镜像
      - name: Pull ZAP Docker Image
        run: docker pull owasp/glue

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run -v ${{ github.workspace }}:/zap/wrk/:rw -t owasp/glue zap-baseline.py -t http://localhost:8080/api/ \
          -a \
          -z "-config replacer.full_list(0).description=auth1 \
              -config replacer.full_list(0).enabled=true \
              -config replacer.full_list(0).matchtype=REQ_HEADER \
              -config replacer.full_list(0).matchstr=Authorization \
              -config replacer.full_list(0).regex=false \
              -config replacer.full_list(0).replacement=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlcjIiLCJpYXQiOjE3MzkyNzcxOTUsImV4cCI6MTc0MDE0MTE5NX0.6yoUrG9OoXHYnA05SZ4H9FrtUaaMqCgUmsoj5DZAHoY" \
          -r /zap/wrk/zap-report.html
      - name: List files in workspace
        run: ls -la ${{ github.workspace }}


      - name: List workspace files
        run: ls -la ${{ github.workspace }}


      # 上传 OWASP ZAP 扫描报告
      - name: Upload OWASP ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: ${{ github.workspace }}/zap-report.html